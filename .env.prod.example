# =============================================================================
# Agent-Builder Production Environment Configuration
# Copy this file to .env.prod and update with your production values
# =============================================================================

# ===================
# Application Settings
# ===================
VERSION=latest
APP_PORT=5000
DOMAIN=your-domain.com
LOG_LEVEL=INFO

# Flask production settings
FLASK_ENV=production
FLASK_DEBUG=false
FLASK_RUN_HOST=0.0.0.0
FLASK_RUN_PORT=5000

# ===================
# LLM Configuration (REQUIRED)
# ===================

# Production LLM API - Use GPT-4 for better results
OPENAI_API_KEY=sk-your-production-openai-api-key-here
OPENAI_API_BASE=https://api.openai.com/v1
OPENAI_MODEL_NAME=gpt-4

# Alternative: Anthropic Claude for production
# OPENAI_API_KEY=your-anthropic-production-key
# OPENAI_API_BASE=https://api.anthropic.com/v1
# OPENAI_MODEL_NAME=claude-3-sonnet-20240229

# ===================
# Database Configuration
# ===================
POSTGRES_DB=agentbuilder
POSTGRES_USER=agentbuilder
POSTGRES_PASSWORD=your-secure-database-password-here
DATABASE_URL=postgresql://agentbuilder:your-secure-database-password-here@postgres:5432/agentbuilder

# ===================
# Cache Configuration
# ===================
REDIS_PASSWORD=your-secure-redis-password-here
REDIS_URL=redis://:your-secure-redis-password-here@redis:6379/0

# ===================
# Security Configuration (REQUIRED for production)
# ===================

# Generate with: python -c "import secrets; print(secrets.token_hex(32))"
SECRET_KEY=your-32-character-secret-key-here
JWT_SECRET=your-jwt-secret-key-here

# SSL/TLS Configuration
ACME_EMAIL=your-email@your-domain.com

# ===================
# Traefik Reverse Proxy
# ===================
TRAEFIK_INSECURE=false
TRAEFIK_LOG_LEVEL=INFO

# Generate with: echo $(htpasswd -nb admin password) | sed -e s/\\$/\\$\\$/g
TRAEFIK_AUTH=admin:$$2y$$10$$your-hashed-password-here

# ===================
# Enterprise Features (Optional)
# ===================
ENTERPRISE_ENABLED=true
AUTH_ENABLED=true
METRICS_ENABLED=true

# ===================
# Monitoring (Optional)
# ===================
GRAFANA_PASSWORD=your-secure-grafana-password-here

# Metrics backend
METRICS_BACKEND=prometheus
# METRICS_BACKEND=statsd
# METRICS_BACKEND=opentelemetry

# ===================
# MCP Configuration
# ===================
MCP_CONFIG_FILE=servers_config.json
MCP_ENABLE_ROOTS=true
MCP_ENABLE_SAMPLING=true
MCP_ENABLE_EXPERIMENTAL=false

# ===================
# Production Optimization
# ===================

# Worker processes (adjust based on CPU cores)
WORKERS=4

# Request limits
MAX_CONTENT_LENGTH=16777216  # 16MB

# Timeout settings
TIMEOUT=300  # 5 minutes

# ===================
# CORS Configuration
# ===================
CORS_ORIGINS=https://your-domain.com,https://www.your-domain.com

# ===================
# Production Deployment Notes
# ===================
#
# 1. NEVER commit this file with real secrets to version control
# 2. Use a secure password manager for production secrets
# 3. Regularly rotate API keys and passwords
# 4. Enable HTTPS/TLS in production (handled by Traefik)
# 5. Monitor logs and metrics in production
# 6. Set up automated backups for database
#
# Quick Production Deployment:
# 1. Copy this file to .env.prod
# 2. Fill in all required secrets and passwords
# 3. Run: docker-compose -f docker-compose.prod.yml up -d
# 4. Set up SSL certificates via Traefik
# 5. Configure monitoring and backups