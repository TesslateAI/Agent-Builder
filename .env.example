# =============================================================================
# Agent-Builder Development Environment Configuration
# Copy this file to .env and update with your values for development
# =============================================================================

# ===================
# LLM Configuration (REQUIRED)
# ===================

# Option 1: OpenAI (Recommended for development)
#OPENAI_API_KEY=sk-your-openai-api-key-here
# OPENAI_API_BASE=https://api.openai.com/v1
# OPENAI_MODEL_NAME=gpt-3.5-turbo

# Option 2: Anthropic (via OpenAI-compatible endpoint)
# OPENAI_API_KEY=your-anthropic-key
# OPENAI_API_BASE=https://api.anthropic.com/v1
# OPENAI_MODEL_NAME=claude-3-sonnet-20240229

# Option 3: Local Ollama (free but requires local setup)
# OPENAI_API_BASE=http://localhost:11434/v1
# OPENAI_API_KEY=ollama
# OPENAI_MODEL_NAME=llama3

# Option 4: Other OpenAI-compatible APIs
# OPENAI_API_KEY=your-api-key
# OPENAI_API_BASE=https://api.your-provider.com/v1
# OPENAI_MODEL_NAME=your-model-name

# ===================
# Flask Development Configuration
# ===================

# Server settings (usually don't need to change)
FLASK_ENV=development
FLASK_DEBUG=true
# FLASK_RUN_HOST=0.0.0.0
# FLASK_RUN_PORT=5000

# ===================
# MCP Configuration (Optional)
# ===================

# Path to MCP servers configuration file
# MCP_CONFIG_FILE=builder/backend/servers_config.json

# MCP feature flags
# MCP_ENABLE_ROOTS=true
# MCP_ENABLE_SAMPLING=true
# MCP_ENABLE_EXPERIMENTAL=false

# ===================
# Development Options (Optional)
# ===================

# Logging level
# LOG_LEVEL=DEBUG

# CORS origins for frontend development
# CORS_ORIGINS=http://localhost:5173,http://localhost:3000

# Database for persistence (SQLite by default)
# DATABASE_URL=sqlite:///builder/backend/data/agent_builder.db

# ===================
# Development Notes
# ===================
# 
# 1. Only OPENAI_API_KEY is required to get started
# 2. Most other settings have sensible defaults
# 3. For Docker development, this file is automatically loaded
# 4. For local development, run: source .env (or use python-dotenv)
#
# Quick Start:
# 1. Copy this file to .env
# 2. Add your OpenAI API key
# 3. Run: docker-compose -f docker-compose.dev.yml up