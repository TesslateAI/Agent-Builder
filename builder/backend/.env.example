# Agent-Builder Environment Configuration
# Copy this file to .env and update with your values

# ===================
# LLM Configuration
# ===================

# Option 1: OpenAI
# OPENAI_API_KEY=sk-your-openai-api-key-here
# OPENAI_API_BASE=https://api.openai.com/v1
# OPENAI_MODEL_NAME=gpt-3.5-turbo

# Option 2: Anthropic (via OpenAI-compatible endpoint)
# OPENAI_API_KEY=your-anthropic-key
# OPENAI_API_BASE=https://api.anthropic.com/v1
# OPENAI_MODEL_NAME=claude-3-sonnet-20240229

# Option 3: Local Ollama (default)
OPENAI_API_BASE=http://localhost:11434/v1
OPENAI_API_KEY=ollama
OPENAI_MODEL_NAME=llama3

# Option 4: Llama/Together/Other compatible APIs
# LLAMA_API_KEY=your-api-key
# LLAMA_BASE_URL=https://api.together.xyz/v1
# LLAMA_MODEL=mistralai/Mixtral-8x7B-Instruct-v0.1

# ===================
# MCP Configuration
# ===================

# Path to MCP servers configuration file
MCP_CONFIG_FILE=servers_config.json

# MCP feature flags
# MCP_ENABLE_ROOTS=true
# MCP_ENABLE_SAMPLING=true
# MCP_ENABLE_EXPERIMENTAL=false

# ===================
# Flask Configuration
# ===================

# Server settings
FLASK_RUN_HOST=0.0.0.0
FLASK_RUN_PORT=5000
FLASK_ENV=production  # Options: development, production

# Security (generate with: python -c "import secrets; print(secrets.token_hex(32))")
# SECRET_KEY=your-secret-key-here

# ===================
# Enterprise Features (Optional)
# ===================

# Enable enterprise features
# ENTERPRISE_ENABLED=false

# Database for enterprise features
# DATABASE_URL=postgresql://user:pass@localhost/agentbuilder

# Authentication
# JWT_SECRET=your-jwt-secret
# AUTH_ENABLED=false

# Metrics
# METRICS_ENABLED=false
# METRICS_BACKEND=prometheus  # Options: prometheus, statsd, opentelemetry

# ===================
# Development Settings
# ===================

# Logging
# LOG_LEVEL=INFO  # Options: DEBUG, INFO, WARNING, ERROR
# LOG_FORMAT=json  # Options: json, text

# CORS (for development)
# CORS_ORIGINS=http://localhost:5173,http://localhost:3000

# Debug mode
# DEBUG=false