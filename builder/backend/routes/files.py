# routes/files.py
import os
import logging
from flask import Blueprint, send_from_directory

logger = logging.getLogger("FilesAPI")

files_bp = Blueprint('files', __name__, url_prefix='/api/tframex')

# Directory for files generated by TFrameX flows/tools
TFRAMEX_GENERATED_FILES_DIR = "tframex_generated_outputs"

def init_generated_files_dir():
    """Initialize the generated files directory"""
    os.makedirs(TFRAMEX_GENERATED_FILES_DIR, exist_ok=True)

# Preview route for files generated by TFrameX
@files_bp.route('/preview/<run_id>/<path:filepath>')
def serve_generated_tframex_studio_file(run_id, filepath):
    """Serve generated files for preview"""
    logger.info(f"Request for TFrameX Studio preview: run_id={run_id}, filepath={filepath}")
    
    # Security check for path traversal
    if '..' in run_id or '..' in filepath:
        logger.warning(f"Path traversal attempt denied: {run_id}/{filepath}")
        return "Invalid path", 403

    directory_to_serve_from = os.path.abspath(os.path.join(TFRAMEX_GENERATED_FILES_DIR, run_id))

    # Ensure we're serving from within the allowed directory
    if not directory_to_serve_from.startswith(os.path.abspath(TFRAMEX_GENERATED_FILES_DIR)):
         logger.error(f"Attempt to access directory outside allowed generated folder: {directory_to_serve_from}")
         return "Access denied", 403

    # Check if directory exists
    if not os.path.isdir(directory_to_serve_from):
        logger.warning(f"Preview directory not found for run_id '{run_id}': {directory_to_serve_from}")
        return "Run ID not found or no files generated.", 404

    try:
        logger.debug(f"Attempting to send file: {filepath} from directory: {directory_to_serve_from}")
        return send_from_directory(directory_to_serve_from, filepath)
    except FileNotFoundError:
        logger.warning(f"File not found in preview request: {filepath} in {directory_to_serve_from}")
        return "File not found.", 404
    except Exception as e:
         logger.error(f"Error serving generated file '{filepath}' for run_id '{run_id}': {e}", exc_info=True)
         return "Error serving file.", 500