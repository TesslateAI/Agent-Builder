"""Initial migration with corrected triggers

Revision ID: d621931d225c
Revises: 
Create Date: 2025-08-07 01:21:50.946397

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'd621931d225c'
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('organizations',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('settings', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_organizations_name', 'organizations', ['name'], unique=False)
    op.create_table('roles',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('permissions', sa.JSON(), nullable=False),
    sa.Column('organization_id', sa.String(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['organization_id'], ['organizations.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_roles_name_org', 'roles', ['name', 'organization_id'], unique=True)
    op.create_index('idx_roles_organization_id', 'roles', ['organization_id'], unique=False)
    op.create_table('users',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('keycloak_id', sa.String(), nullable=False),
    sa.Column('email', sa.String(), nullable=False),
    sa.Column('username', sa.String(), nullable=False),
    sa.Column('first_name', sa.String(), nullable=True),
    sa.Column('last_name', sa.String(), nullable=True),
    sa.Column('organization_id', sa.String(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('last_login', sa.TIMESTAMP(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['organization_id'], ['organizations.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('keycloak_id'),
    sa.UniqueConstraint('username')
    )
    op.create_index('idx_users_email', 'users', ['email'], unique=False)
    op.create_index('idx_users_keycloak_id', 'users', ['keycloak_id'], unique=False)
    op.create_index('idx_users_organization_id', 'users', ['organization_id'], unique=False)
    op.create_table('audit_logs',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.String(), nullable=True),
    sa.Column('organization_id', sa.String(), nullable=True),
    sa.Column('action', sa.String(), nullable=False),
    sa.Column('resource_type', sa.String(), nullable=False),
    sa.Column('resource_id', sa.String(), nullable=True),
    sa.Column('details', sa.JSON(), nullable=True),
    sa.Column('ip_address', sa.String(), nullable=True),
    sa.Column('user_agent', sa.String(), nullable=True),
    sa.Column('timestamp', sa.DateTime(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['organization_id'], ['organizations.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_audit_logs_organization_id', 'audit_logs', ['organization_id'], unique=False)
    op.create_index('idx_audit_logs_timestamp', 'audit_logs', ['timestamp'], unique=False)
    op.create_index('idx_audit_logs_user_id', 'audit_logs', ['user_id'], unique=False)
    op.create_table('projects',
    sa.Column('id', sa.String(length=64), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('organization_id', sa.String(length=64), nullable=False),
    sa.Column('owner_id', sa.String(length=64), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['organization_id'], ['organizations.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['owner_id'], ['users.id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_projects_organization_id', 'projects', ['organization_id'], unique=False)
    op.create_index('idx_projects_owner_id', 'projects', ['owner_id'], unique=False)
    op.create_table('user_sessions',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('user_id', sa.String(), nullable=False),
    sa.Column('refresh_token_jti', sa.String(), nullable=True),
    sa.Column('ip_address', sa.String(), nullable=True),
    sa.Column('user_agent', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('expires_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('last_activity', sa.DateTime(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('refresh_token_jti')
    )
    op.create_index('idx_user_sessions_expires_at', 'user_sessions', ['expires_at'], unique=False)
    op.create_index('idx_user_sessions_user_id', 'user_sessions', ['user_id'], unique=False)
    op.create_table('flows',
    sa.Column('id', sa.String(length=64), nullable=False),
    sa.Column('project_id', sa.String(length=64), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('nodes', sa.JSON(), nullable=False),
    sa.Column('edges', sa.JSON(), nullable=False),
    sa.Column('flow_metadata', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['project_id'], ['projects.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_flows_project_id', 'flows', ['project_id'], unique=False)
    op.create_index(op.f('ix_flows_project_id'), 'flows', ['project_id'], unique=False)
    op.create_table('user_project_roles',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.String(), nullable=False),
    sa.Column('project_id', sa.String(), nullable=False),
    sa.Column('role_id', sa.String(), nullable=False),
    sa.Column('assigned_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('assigned_by', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['assigned_by'], ['users.id'], ),
    sa.ForeignKeyConstraint(['project_id'], ['projects.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['role_id'], ['roles.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_user_project_roles_project_id', 'user_project_roles', ['project_id'], unique=False)
    op.create_index('idx_user_project_roles_role_id', 'user_project_roles', ['role_id'], unique=False)
    op.create_index('idx_user_project_roles_unique', 'user_project_roles', ['user_id', 'project_id', 'role_id'], unique=True)
    op.create_index('idx_user_project_roles_user_id', 'user_project_roles', ['user_id'], unique=False)
    op.create_table('flow_executions',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('flow_id', sa.String(length=64), nullable=False),
    sa.Column('status', sa.String(length=32), nullable=False),
    sa.Column('input_data', sa.JSON(), nullable=True),
    sa.Column('output_data', sa.JSON(), nullable=True),
    sa.Column('error_message', sa.String(), nullable=True),
    sa.Column('started_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('completed_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['flow_id'], ['flows.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_flow_executions_flow_id', 'flow_executions', ['flow_id'], unique=False)
    op.create_index('idx_flow_executions_status', 'flow_executions', ['status'], unique=False)
    op.create_index(op.f('ix_flow_executions_flow_id'), 'flow_executions', ['flow_id'], unique=False)
    op.create_table('triggers',
    sa.Column('id', sa.String(length=64), nullable=False),
    sa.Column('flow_id', sa.String(length=64), nullable=False),
    sa.Column('type', sa.String(length=50), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('config', sa.JSON(), nullable=False),
    sa.Column('enabled', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('created_by', sa.String(length=64), nullable=True),
    sa.Column('organization_id', sa.String(length=64), nullable=True),
    sa.Column('webhook_url', sa.String(length=500), nullable=True),
    sa.Column('next_run_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('last_triggered_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('trigger_count', sa.Integer(), nullable=False),
    sa.Column('error_count', sa.Integer(), nullable=False),
    sa.Column('last_error', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['created_by'], ['users.id'], ),
    sa.ForeignKeyConstraint(['flow_id'], ['flows.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['organization_id'], ['organizations.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_triggers_enabled', 'triggers', ['enabled'], unique=False)
    op.create_index('idx_triggers_flow_id', 'triggers', ['flow_id'], unique=False)
    op.create_index('idx_triggers_next_run', 'triggers', ['next_run_at'], unique=False)
    op.create_index('idx_triggers_type', 'triggers', ['type'], unique=False)
    op.create_table('trigger_executions',
    sa.Column('id', sa.String(length=64), nullable=False),
    sa.Column('trigger_id', sa.String(length=64), nullable=False),
    sa.Column('flow_execution_id', sa.Integer(), nullable=True),
    sa.Column('triggered_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('completed_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('status', sa.String(length=50), nullable=False),
    sa.Column('duration_ms', sa.Integer(), nullable=True),
    sa.Column('payload', sa.JSON(), nullable=True),
    sa.Column('error', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['flow_execution_id'], ['flow_executions.id'], ),
    sa.ForeignKeyConstraint(['trigger_id'], ['triggers.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_executions_status', 'trigger_executions', ['status'], unique=False)
    op.create_index('idx_executions_trigger_id', 'trigger_executions', ['trigger_id'], unique=False)
    op.create_index('idx_executions_triggered_at', 'trigger_executions', ['triggered_at'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('idx_executions_triggered_at', table_name='trigger_executions')
    op.drop_index('idx_executions_trigger_id', table_name='trigger_executions')
    op.drop_index('idx_executions_status', table_name='trigger_executions')
    op.drop_table('trigger_executions')
    op.drop_index('idx_triggers_type', table_name='triggers')
    op.drop_index('idx_triggers_next_run', table_name='triggers')
    op.drop_index('idx_triggers_flow_id', table_name='triggers')
    op.drop_index('idx_triggers_enabled', table_name='triggers')
    op.drop_table('triggers')
    op.drop_index(op.f('ix_flow_executions_flow_id'), table_name='flow_executions')
    op.drop_index('idx_flow_executions_status', table_name='flow_executions')
    op.drop_index('idx_flow_executions_flow_id', table_name='flow_executions')
    op.drop_table('flow_executions')
    op.drop_index('idx_user_project_roles_user_id', table_name='user_project_roles')
    op.drop_index('idx_user_project_roles_unique', table_name='user_project_roles')
    op.drop_index('idx_user_project_roles_role_id', table_name='user_project_roles')
    op.drop_index('idx_user_project_roles_project_id', table_name='user_project_roles')
    op.drop_table('user_project_roles')
    op.drop_index(op.f('ix_flows_project_id'), table_name='flows')
    op.drop_index('idx_flows_project_id', table_name='flows')
    op.drop_table('flows')
    op.drop_index('idx_user_sessions_user_id', table_name='user_sessions')
    op.drop_index('idx_user_sessions_expires_at', table_name='user_sessions')
    op.drop_table('user_sessions')
    op.drop_index('idx_projects_owner_id', table_name='projects')
    op.drop_index('idx_projects_organization_id', table_name='projects')
    op.drop_table('projects')
    op.drop_index('idx_audit_logs_user_id', table_name='audit_logs')
    op.drop_index('idx_audit_logs_timestamp', table_name='audit_logs')
    op.drop_index('idx_audit_logs_organization_id', table_name='audit_logs')
    op.drop_table('audit_logs')
    op.drop_index('idx_users_organization_id', table_name='users')
    op.drop_index('idx_users_keycloak_id', table_name='users')
    op.drop_index('idx_users_email', table_name='users')
    op.drop_table('users')
    op.drop_index('idx_roles_organization_id', table_name='roles')
    op.drop_index('idx_roles_name_org', table_name='roles')
    op.drop_table('roles')
    op.drop_index('idx_organizations_name', table_name='organizations')
    op.drop_table('organizations')
    # ### end Alembic commands ###